
games:
  get:
    by.gameId: >
      SELECT * FROM games WHERE id = :id
  insert: >
    INSERT INTO games (id, gameStatus, latestGameStatusUpdate) VALUES (:id, "IN_LOBBY", :time)
  update:
    status: >
      UPDATE games SET gameStatus = :gameStatus WHERE id = :id
    time: >
      UPDATE games SET latestGameStatusUpdate = :latestGameStatusUpdate WHERE id = :id
  delete:

players:
  get:
    usernames: >
      SELECT username FROM players WHERE gameId = :id
    by.playerId: >
      SELECT * FROM players WHERE id = :id
    health: >
      SELECT health FROM players WHERE id = :id
    recent.by.id: >
      SELECT players.id, players.gameId, players.health, players.isInactive, MAX(geoData.timeReceived) AS most_recent_timeReceived
      FROM players
      INNER JOIN geoData ON players.id = geoData.playerId
      WHERE players.id = :id;
  insert: >
    INSERT INTO players (id, gameId, username, health, isAdmin) VALUES (:id, :gameId, :username, :health, :isAdmin)
  update:
    health: >
      UPDATE players SET health = GREATEST(health - :decrementBy, 0) WHERE id = :id;
    inactive: >
      UPDATE players SET isInactive = true WHERE id = :id
  delete:

geoData:
  add.ping: >
    INSERT INTO geoData (playerId, gameId, longitude, latitude, timeReceived) VALUES (:playerId, :gameId, :longitude, :latitude, :timeReceived)
  get:
    in.range: >
      SELECT g.playerId, g.gameId, g.longitude, g.latitude, g.timeReceived
      FROM geoData g
      INNER JOIN (
        SELECT playerId, MAX(timeReceived) as maxTimestamp
        FROM geoData
        WHERE gameId = :gameId AND playerId != :playerId AND timeReceived BETWEEN :min AND :max
        GROUP BY playerId
      ) t ON g.playerId = t.playerId AND g.timeReceived = t.maxTimestamp;
